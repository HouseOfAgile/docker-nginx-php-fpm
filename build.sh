#!/usr/bin/env bash
# generated by docker-apps: build all generate dockerfiles

getopt --test > /dev/null
if [[ $? -ne 4 ]]; then
    log "Please install getopt"
    exit 1
fi

SHORT=dv:
LONG=debug,variant:
PARSED=`getopt --options $SHORT --longoptions $LONG --name "$0" -- "$@"`
if [[ $? -ne 0 ]]; then
    exit 2
fi

# use eval with "$PARSED" to properly handle the quoting
eval set -- "$PARSED"
# now enjoy the options in order and nicely split until we see --
while true; do
    case "$1" in
        -d|--debug)
            set -x
            shift
            ;;
        -v|--variant)
            variant="$2"
            shift 2
            ;;
        -- )
            shift
            break
            ;;
        *)
            echo $1
            echo "Check parameter"
            exit 3
            ;;
    esac
done

all_variants="php5.6 php7.1 php7.2 php7.3 php7.4"

list_ops=()
if [[ ! "${variant}" == "" ]]; then
  if [[ ! " ${all_variants} " =~ " ${variant} " ]]; then
    list_ops=( "Variant $variant does not exist in ${all_variants}" "${list_ops[@]}")
    all_variants=''
  else
    all_variants=${variant}
  fi
fi

[ "$DEBUG" ] && set -x
for variant in ${all_variants};
do
  this_image_name=houseofagile/docker-nginx-php-fpm"$([ ! -z "$variant" ] && echo ":"$variant || echo '')"
  echo -e "Building $this_image_name..."
  docker build -t $this_image_name . \
  -f dockerfiles/$([ ! -z "$variant" ] && echo $variant"." || echo '')Dockerfile >output$([ ! -z "$variant" ] && echo "."$variant || echo '') 2>&1
  if [ $? == 0 ]; then
    docker_network=" --network=hoa_network "
    list_ops=( "  Run it with: docker run ${docker_network}-d -P $this_image_name" "${list_ops[@]}")
    list_ops=( "Image $this_image_name successfully created" "${list_ops[@]}")
  else
    list_ops=( "Image $this_image_name was not created, check output (cat output$([ ! -z "$variant" ] && echo "."$variant || echo '')) " "${list_ops[@]}")
  fi
done

printf '%s\n' "${list_ops[@]}"